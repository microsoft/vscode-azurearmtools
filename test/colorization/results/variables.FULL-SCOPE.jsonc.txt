TEST STRING: "[variables('myvar')]"
"[                  source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template {{scope-expression-start}}
variables           source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.variables-reference.tle.arm-template {{scope-variables}}
(                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.variables-reference.tle.arm-template {{scope-parentheses-funccall}}
'myvar'             source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.variables-reference.tle.arm-template {{scope-variable}}
)                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.variables-reference.tle.arm-template {{scope-parentheses-funccall}}
]"                  source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template {{scope-expression-end}}

TEST STRING: "[variables(concat('myvar','a'))]"
"[                  source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template {{scope-expression-start}}
variables           source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template {{scope-variables}}
(                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template {{scope-parentheses-funccall}}
concat              source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-builtin}}
(                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template {{scope-parentheses-funccall}}
'                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-string-contents}} {{scope-string-start}}
myvar               source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-string-contents}}
'                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-string-contents}} {{scope-string-end}}
,                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-funcargs-separator}}
'                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-string-contents}} {{scope-string-start}}
a                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-string-contents}}
'                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template {{scope-string-contents}} {{scope-string-end}}
)                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template meta.function-arguments.tle.arm-template meta.function-call.tle.arm-template {{scope-parentheses-funccall}}
)                   source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template meta.function-call.tle.arm-template {{scope-parentheses-funccall}}
]"                  source.json.arm-template meta.structure.dictionary.json.arm-template meta.structure.dictionary.value.json.arm-template meta.expression.tle.arm-template {{scope-expression-end}}
