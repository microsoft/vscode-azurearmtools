{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        /*"subscriptionId": {
            "type": "string",
            "metadata": {
                "description": "Subscription Id to be used for provisioning the cluster"
            }
        },*/
        /*"rgName": {
            "type": "string",
            "metadata": {
                "description": "Resource Group under which the cluster is provisioned"
            }
        },*/
        "cloudEnvironment": {
            "type": "string",
            "defaultValue": "public",
            "metadata": {
                "description": "cloud environment, public, fairfax, mooncake or blackforest"
            }
        },
        "clusterLocation": {
            "type": "string",
            "metadata": {
                "description": "Location of the Cluster"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "Cluster",
            "metadata": {
                "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
            }
        },
        /*"clusterType": {
            "type": "string",
            "metadata": {
                "description": "Type of the Cluster"
            },
            "allowedValues": [
                "Prod",
                "Test"
            ],
            "defaultValue": "Test"
        },*/
        "clusterEndpoint": {
            "type": "string",
            "metadata": {
                "description": "Cluster Endpoint URL"
            }
        },
        "DsmsHostName": {
            "type": "string",
            "defaultValue": "DsmsHostName",
            "metadata": {
                "description": "Dsms Url"
            }
        },
        /*"DsmsToolsPath": {
            "type": "string",
            "defaultValue": "DsmsToolsPath",
            "metadata": {
                "description": "dsmstools path"
            }
        },*/
        "WarmPathEndpoint": {
            "type": "string",
            "defaultValue": "diagnosticsprod",
            "metadata": {
                "description": "Geneva warm path endpoint"
            }
        },
        /*"shortClusterName": {
            "type": "string",
            "metadata": {
                "description": "Short hand name for the cluster"
            }
        },*/
        "DSTSDnsName": {
            "type": "string",
            "metadata": {
                "description": "DSTS DNS Name"
            }
        },
        "cloudServiceName": {
            "type": "string",
            "defaultValue": "xarchive"
        },
        "DSTSRealm": {
            "type": "string",
            "defaultValue": "realm://dsts.core.windows.net/"
        },
        "clientClaims": {
            "type": "string",
            "defaultValue": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role=Archive-PlatformServiceViewer"
        },
        "adminClientClaims": {
            "type": "string",
            "metadata": {
                "description": "DSTS Admin Claims"
            },
            "defaultValue": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role=Archive-PlatformServiceAdministrator"
        },
        "nt0applicationStartPort": {
            "type": "int",
            "defaultValue": 20000
        },
        "nt0applicationEndPort": {
            "type": "int",
            "defaultValue": 30000
        },
        "nt0ephemeralStartPort": {
            "type": "int",
            "defaultValue": 49152
        },
        "nt0ephemeralEndPort": {
            "type": "int",
            "defaultValue": 65534
        },
        "nt0fabricTcpGatewayPort": {
            "type": "int",
            "defaultValue": 19000
        },
        "nt0fabricHttpGatewayPort": {
            "type": "int",
            "defaultValue": 19080
        },
        "nt1applicationStartPort": {
            "type": "int",
            "defaultValue": 20000
        },
        "nt1applicationEndPort": {
            "type": "int",
            "defaultValue": 30000
        },
        "nt1ephemeralStartPort": {
            "type": "int",
            "defaultValue": 49152
        },
        "nt1ephemeralEndPort": {
            "type": "int",
            "defaultValue": 65534
        },
        "nt1fabricTcpGatewayPort": {
            "type": "int",
            "defaultValue": 19000
        },
        "nt1fabricHttpGatewayPort": {
            "type": "int",
            "defaultValue": 19080
        },
        "nt2applicationStartPort": {
            "type": "int",
            "defaultValue": 20000
        },
        "nt2applicationEndPort": {
            "type": "int",
            "defaultValue": 30000
        },
        "nt2ephemeralStartPort": {
            "type": "int",
            "defaultValue": 49152
        },
        "nt2ephemeralEndPort": {
            "type": "int",
            "defaultValue": 65534
        },
        "nt2fabricTcpGatewayPort": {
            "type": "int",
            "defaultValue": 19000
        },
        "nt2fabricHttpGatewayPort": {
            "type": "int",
            "defaultValue": 19080
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "Subnet-0"
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24"
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Subnet-1"
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24"
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "Subnet-2"
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24"
        },
        "computeLocation": {
            "type": "string"
        },
        /*"vmStorageAccountName": {
            "type": "string"
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "PublicIP-VM"
        },
        "publicIPAddressType": {
            "type": "string",
            "allowedValues": [
                "Dynamic"
            ],
            "defaultValue": "Dynamic"
        },*/
        "vmStorageAccountContainerName": {
            "type": "string",
            "defaultValue": "vhds"
        },
        "storageAccountEndPoint": {
            "type": "string",
            "defaultValue": "https://core.windows.net/"
        },
        "archiveStorageAccountName": {
            "type": "string"
        },
        /*"keyVaultName": {
            "type": "string"
        },*/
        "archiveBackendTenantName": {
            "type": "string",
            "metadata": {
                "description": "BackendTenant name for the service tenant cluster"
            }
        },
        "archiveBTQueueStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Archive Backend Tenant Storage Account Queue Name"
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "adminuser",
            "metadata": {
                "description": "Remote desktop user Id"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Remote desktop user password. Must be a strong password"
            }
        },
        "GCSVaultID": {
            "type": "string",
            "metadata": {
                "description": "The GCS key vault id"
            }
        },
        "GCSCertUrl": {
            "type": "string",
            "metadata": {
                "description": "The GCS cert url in the key vault"
            }
        },
        "KVMgmtVaultID": {
            "type": "string",
            "metadata": {
                "description": "The KVMgmtVaultID of the key vault"
            }
        },
        "KVMgmtCertUrl": {
            "type": "string",
            "metadata": {
                "description": "The KVMgmtCertUrl in the key vault"
            }
        },
        "MDMVaultID": {
            "type": "string",
            "metadata": {
                "description": "The MDMVaultID of the key vault"
            }
        },
        "MDMCertUrl": {
            "type": "string",
            "metadata": {
                "description": "The MDMCertUrl in the key vault"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "VNet"
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16"
        },
        "dnsName": {
            "type": "string"
        },
        "nicName": {
            "type": "string",
            "defaultValue": "NIC"
        },
        /*"lbName": {
            "type": "string",
            "defaultValue": "LoadBalancer"
        },*/
        "lbIPName": {
            "type": "string",
            "defaultValue": "PublicIP-LB-FE"
        },
        "overProvision": {
            "type": "string",
            "defaultValue": "false"
        },
        "vmImagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer"
        },
        "vmImageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer"
        },
        "vmImageSku": {
            "type": "string",
            "defaultValue": "2016-Datacenter"
        },
        "vmImageVersion": {
            "type": "string",
            "defaultValue": "latest"
        },
        "clusterProtectionLevel": {
            "type": "string",
            "allowedValues": [
                "None",
                "Sign",
                "EncryptAndSign"
            ],
            "defaultValue": "EncryptAndSign",
            "metadata": {
                "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
            }
        },
        "certificateStoreValue": {
            "type": "string",
            "allowedValues": [
                "My"
            ],
            "defaultValue": "My",
            "metadata": {
                "description": "The store name where the cert will be deployed in the virtual machine"
            }
        },
        "certificateCommonName": {
            "type": "string",
            "metadata": {
                "description": "Certificate Common Name, typically the same as the cluster endpoint"
            }
        },
        "SSLVaultID": {
            "type": "string",
            "metadata": {
                "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
            }
        },
        "SSLCertUrl": {
            "type": "string",
            "metadata": {
                "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
            }
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Replication option for the VM image storage account"
            }
        },
        "supportLogStorageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Replication option for the support log storage account"
            }
        },
        "supportLogStorageAccountName": {
            "type": "string",
            "defaultValue": "[toLower( concat('sflogs', uniqueString(resourceGroup().id),'2'))]",
            "metadata": {
                "description": "Name for the storage account that contains support logs from the cluster"
            }
        },
        "applicationDiagnosticsStorageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Replication option for the application diagnostics storage account"
            }
        },
        "applicationDiagnosticsStorageAccountName": {
            "type": "string",
            "defaultValue": "[toLower(concat(uniqueString(resourceGroup().id), '3' ))]",
            "metadata": {
                "description": "Name for the storage account that contains application diagnostics data from the cluster"
            }
        },
        "nt0InstanceCount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Instance count for node type"
            }
        },
        "vmNodeType0Name": {
            "type": "string",
            "defaultValue": "xarcXprim",
            "maxLength": 9
        },
        "vmNodeType0Size": {
            "type": "string",
            "defaultValue": "Standard_D3_v2"
        },
        "nt1InstanceCount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Instance count for node type"
            }
        },
        "vmNodeType1Name": {
            "type": "string",
            "defaultValue": "xarcXproc",
            "maxLength": 9
        },
        "vmNodeType1Size": {
            "type": "string",
            "defaultValue": "Standard_D3_v2"
        },
        "nt2InstanceCount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Instance count for node type"
            }
        },
        "vmNodeType2Name": {
            "type": "string",
            "defaultValue": "xarcXres",
            "maxLength": 9
        },
        "vmNodeType2Size": {
            "type": "string",
            "defaultValue": "Standard_D3_v2"
        }
    },
    "variables": {

        "storageApiVersion": "2016-01-01",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "lbID0": "[resourceId('Microsoft.Network/loadBalancers', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name')))]",
        "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
        "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
        "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
        "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
        "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "lbID1": "[resourceId('Microsoft.Network/loadBalancers', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType1Name')))]",
        "lbIPConfig1": "[concat(variables('lbID1'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
        "lbPoolID1": "[concat(variables('lbID1'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
        "lbProbeID1": "[concat(variables('lbID1'),'/probes/FabricGatewayProbe')]",
        "lbHttpProbeID1": "[concat(variables('lbID1'),'/probes/FabricHttpGatewayProbe')]",
        "lbNatPoolID1": "[concat(variables('lbID1'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
        "lbID2": "[resourceId('Microsoft.Network/loadBalancers', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType2Name')))]",
        "lbIPConfig2": "[concat(variables('lbID2'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
        "lbPoolID2": "[concat(variables('lbID2'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
        "lbProbeID2": "[concat(variables('lbID2'),'/probes/FabricGatewayProbe')]",
        "lbHttpProbeID2": "[concat(variables('lbID2'),'/probes/FabricHttpGatewayProbe')]",
        "lbNatPoolID2": "[concat(variables('lbID2'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
        "vmStorageAccountName0": "[toLower(concat(uniqueString(resourceGroup().id), '1', '0' ))]",
        "uniqueStringArray0": [
            "[concat(variables('vmStorageAccountName0'), '0')]",
            "[concat(variables('vmStorageAccountName0'), '1')]",
            "[concat(variables('vmStorageAccountName0'), '2')]",
            "[concat(variables('vmStorageAccountName0'), '3')]",
            "[concat(variables('vmStorageAccountName0'), '4')]"
        ]
        /* cluster node type OS image */
        /*"nodeImageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
        }*/
    },
    "resources": [
        {
            "apiVersion": "2016-01-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('supportLogStorageAccountName')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
            ],
            "properties": {
            },
            "kind": "Storage",
            "sku": {
                "name": "[parameters('supportLogStorageAccountType')]"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2016-01-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('applicationDiagnosticsStorageAccountName')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
            ],
            "properties": {
            },
            "kind": "Storage",
            "sku": {
                "name": "[parameters('applicationDiagnosticsStorageAccountType')]"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', concat('nsg', parameters('subnet0Name')))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg', parameters('subnet0Name')))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg', parameters('subnet1Name')))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg', parameters('subnet2Name')))]"
                            }
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('lbIPName'),'-','0')]",
            "location": "[parameters('computeLocation')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsName')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('lbIPName'),'-','1')]",
            "location": "[parameters('computeLocation')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsName'),'-','secondary')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('lbIPName'),'-','2')]",
            "location": "[parameters('computeLocation')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsName'),'-','tertiary')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name'))]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',concat(parameters('lbIPName'),'-','0'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerIPConfig",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-','0'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBEAddressPool",
                        "properties": {
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[parameters('nt0fabricTcpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[parameters('nt0fabricTcpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbProbeID0')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "LBHttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[parameters('nt0fabricHttpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[parameters('nt0fabricHttpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbHttpProbeID0')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "FabricGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('nt0fabricTcpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "FabricHttpGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('nt0fabricHttpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "LoadBalancerBEAddressNatPool",
                        "properties": {
                            "backendPort": "3389",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPortRangeEnd": "4500",
                            "frontendPortRangeStart": "3389",
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType1Name'))]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',concat(parameters('lbIPName'),'-','1'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerIPConfig",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-','1'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBEAddressPool",
                        "properties": {
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID1')]"
                            },
                            "backendPort": "[parameters('nt1fabricTcpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig1')]"
                            },
                            "frontendPort": "[parameters('nt1fabricTcpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbProbeID1')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "LBHttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID1')]"
                            },
                            "backendPort": "[parameters('nt1fabricHttpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig1')]"
                            },
                            "frontendPort": "[parameters('nt1fabricHttpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbHttpProbeID1')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "FabricGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('nt1fabricTcpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "FabricHttpGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('nt1fabricHttpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "LoadBalancerBEAddressNatPool",
                        "properties": {
                            "backendPort": "3389",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig1')]"
                            },
                            "frontendPortRangeEnd": "4500",
                            "frontendPortRangeStart": "3389",
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType2Name'))]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',concat(parameters('lbIPName'),'-','2'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerIPConfig",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-','2'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBEAddressPool",
                        "properties": {
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID2')]"
                            },
                            "backendPort": "[parameters('nt2fabricTcpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig2')]"
                            },
                            "frontendPort": "[parameters('nt2fabricTcpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbProbeID2')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "LBHttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID2')]"
                            },
                            "backendPort": "[parameters('nt2fabricHttpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig2')]"
                            },
                            "frontendPort": "[parameters('nt2fabricHttpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbHttpProbeID2')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "FabricGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('nt2fabricTcpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "FabricHttpGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('nt2fabricHttpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "LoadBalancerBEAddressNatPool",
                        "properties": {
                            "backendPort": "3389",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig2')]"
                            },
                            "frontendPortRangeEnd": "4500",
                            "frontendPortRangeStart": "3389",
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat('nsg', parameters('subnet0Name'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowSvcFabSMB",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "445",
                            "direction": "Inbound",
                            "priority": 3950,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow SMB traffic within the net, used by fabric to move packages around"
                    },
                    {
                        "name": "allowSvcFabCluser",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1025-1027",
                            "direction": "Inbound",
                            "priority": 3920,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow ports within vnet that are used by the fabric to talk between nodes"
                    },
                    {
                        "name": "allowSvcFabEphemeral",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(parameters('nt0ephemeralStartPort'), '-', parameters('nt0ephemeralEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3930,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric ephemeral ports within the vnet"
                    },
                    {
                        "name": "allowSvcFabPortal",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('nt0fabricHttpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3900,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used to access the fabric cluster web portal"
                    },
                    {
                        "name": "allowSvcFabClient",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('nt0fabricTcpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3910,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used by the fabric client (includes powershell)"
                    },
                    {
                        "name": "allowSvcFabApplication",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(parameters('nt0applicationStartPort'), '-', parameters('nt0applicationEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3940,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric application ports within the vnet"
                    },
                    {
                        "name": "blockAll",
                        "properties": {
                            "access": "Deny",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "direction": "Inbound",
                            "priority": 4095,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "block all traffic except what we've explicitly allowed"
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat('nsg', parameters('subnet1Name'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowSvcFabSMB",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "445",
                            "direction": "Inbound",
                            "priority": 3950,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow SMB traffic within the net, used by fabric to move packages around"
                    },
                    {
                        "name": "allowSvcFabCluser",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1025-1027",
                            "direction": "Inbound",
                            "priority": 3920,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow ports within vnet that are used by the fabric to talk between nodes"
                    },
                    {
                        "name": "allowSvcFabEphemeral",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(parameters('nt1ephemeralStartPort'), '-', parameters('nt1ephemeralEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3930,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric ephemeral ports within the vnet"
                    },
                    {
                        "name": "allowSvcFabPortal",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('nt1fabricHttpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3900,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used to access the fabric cluster web portal"
                    },
                    {
                        "name": "allowSvcFabClient",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('nt1fabricTcpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3910,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used by the fabric client (includes powershell)"
                    },
                    {
                        "name": "allowSvcFabApplication",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(parameters('nt1applicationStartPort'), '-', parameters('nt1applicationEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3940,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric application ports within the vnet"
                    },
                    {
                        "name": "blockAll",
                        "properties": {
                            "access": "Deny",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "direction": "Inbound",
                            "priority": 4095,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "block all traffic except what we've explicitly allowed"
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat('nsg', parameters('subnet2Name'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowSvcFabSMB",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "445",
                            "direction": "Inbound",
                            "priority": 3950,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow SMB traffic within the net, used by fabric to move packages around"
                    },
                    {
                        "name": "allowSvcFabCluser",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1025-1027",
                            "direction": "Inbound",
                            "priority": 3920,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow ports within vnet that are used by the fabric to talk between nodes"
                    },
                    {
                        "name": "allowSvcFabEphemeral",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(parameters('nt2ephemeralStartPort'), '-', parameters('nt2ephemeralEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3930,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric ephemeral ports within the vnet"
                    },
                    {
                        "name": "allowSvcFabPortal",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('nt2fabricHttpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3900,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used to access the fabric cluster web portal"
                    },
                    {
                        "name": "allowSvcFabClient",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('nt2fabricTcpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3910,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used by the fabric client (includes powershell)"
                    },
                    {
                        "name": "allowSvcFabApplication",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(parameters('nt2applicationStartPort'), '-', parameters('nt2applicationEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3940,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric application ports within the vnet"
                    },
                    {
                        "name": "blockAll",
                        "properties": {
                            "access": "Deny",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "direction": "Inbound",
                            "priority": 4095,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "block all traffic except what we've explicitly allowed"
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2016-01-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('uniqueStringArray0')[copyIndex()]]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
            ],
            "properties": {
            },
            "copy": {
                "name": "storageLoop",
                "count": 5
            },
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[parameters('vmNodeType0Name')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4])]",
                "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name')))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('applicationDiagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "overprovision": "[parameters('overProvision')]",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat(parameters('vmNodeType0Name'),'_ServiceFabricNode')]",
                                "properties": {
                                    "type": "ServiceFabricNode",
                                    "autoUpgradeMinorVersion": false,
                                    "protectedSettings": {
                                        "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                                        "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                                    },
                                    "publisher": "Microsoft.Azure.ServiceFabric",
                                    "settings": {
                                        "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                        "nodeTypeRef": "[parameters('vmNodeType0Name')]",
                                        "dataPath": "D:\\\\SvcFab",
                                        "durabilityLevel": "Silver",
                                        "enableParallelJobs": true,
                                        "nicPrefixOverride": "[parameters('subnet0Prefix')]",
                                        "certificate": {
                                            "commonNames": [
                                                "[parameters('certificateCommonName')]"
                                            ],
                                            "x509StoreName": "[parameters('certificateStoreValue')]"
                                        }
                                    },
                                    "typeHandlerVersion": "1.0"
                                }
                            },
                            {
                                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                                "properties": {
                                    "type": "IaaSDiagnostics",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "storageAccountName": "[parameters('applicationDiagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                                        "storageAccountEndPoint": "[parameters('storageAccountEndPoint')]"
                                    },
                                    "publisher": "Microsoft.Azure.Diagnostics",
                                    "settings": {
                                        "WadCfg": {
                                            "DiagnosticMonitorConfiguration": {
                                                "overallQuotaInMB": "50000",
                                                "EtwProviders": {
                                                    "EtwEventSourceProviderConfiguration": [
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Actors",
                                                            "scheduledTransferKeywordFilter": "1",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableActorEventTable"
                                                            }
                                                        },
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Services",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                                                            }
                                                        }
                                                    ],
                                                    "EtwManifestProviderConfiguration": [
                                                        {
                                                            "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                                            "scheduledTransferLogLevelFilter": "Information",
                                                            "scheduledTransferKeywordFilter": "4611686018427387904",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricSystemEventTable"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "StorageAccount": "[parameters('applicationDiagnosticsStorageAccountName')]"
                                    },
                                    "typeHandlerVersion": "1.5"
                                }
                            },
                            {
                                "name": "[concat(parameters('vmNodeType0Name'),'_InstallDependencies')]",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "https://stgcytestsfarc01.blob.core.windows.net/net472/install_net472.ps1",
                                            "https://stgcytestsfarc01.blob.core.windows.net/tls/TLSSettings.ps1",
                                            "https://stgcytestsfarc01.blob.core.windows.net/entry/entry.ps1"
                                        ],
                                        "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File entry.ps1 -NET472 -TLS"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "autoUpgradeMinorVersion": true,
                                    "publisher": "Microsoft.Azure.Security.Dsms",
                                    "type": "DSMSForWindows",
                                    "typeHandlerVersion": "2.15"
                                },
                                "name": "DsmsExtension"
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('nicName'), '-0')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('nicName'),'-',0)]",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbPoolID0')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatPoolID0')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    "id": "[variables('subnet0Ref')]"
                                                }
                                            }
                                        }
                                    ],
                                    "primary": true
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computernamePrefix": "[parameters('vmNodeType0Name')]",
                        "dsmsConfiguration": {
                            "certificates": [
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/chained/st/', parameters('clusterName'), '/sf.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/selfsigned/bt/', parameters('archiveBackendTenantName'), '/encryption-01.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/selfsigned/bt/', parameters('archiveBackendTenantName'), '/encryption-02.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/genevacustomers/monitoring/warmpath/', parameters('cloudEnvironment'), '/', parameters('WarmPathEndpoint'), '/azurearchivestorage/certificates/chained/stgcs.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/genevacustomers/monitoring/hotpath/', parameters('cloudEnvironment'), '/azurearchivestorage/certificates/chained/stmdm.pfx')]"
                                }
                            ],
                            "secrets": [
                                {
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/stg/global/storageaccounts/archivequeue/', parameters('archiveStorageAccountName'))]"
                                },
                                {
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/storageaccounts/bt/', parameters('archiveBackendTenantName'), '/', parameters('archiveBTQueueStorageAccount'))]"
                                }
                            ]
                        },
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "[parameters('SSLVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('SSLCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('GCSVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('GCSCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('KVMgmtVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('KVMgmtCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('MDMVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('MDMCertUrl')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                        },
                        "osDisk": {
                            "vhdContainers": [
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]"
                            ],
                            "name": "vmssosdisk",
                            "caching": "ReadOnly",
                            "createOption": "FromImage"
                        }
                    }
                }
            },
            "sku": {
                "name": "[parameters('vmNodeType0Size')]",
                "capacity": "[parameters('nt0InstanceCount')]",
                "tier": "Standard"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[parameters('vmNodeType1Name')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4])]",
                "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType1Name')))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('applicationDiagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "overprovision": "[parameters('overProvision')]",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat(parameters('vmNodeType1Name'),'_ServiceFabricNode')]",
                                "properties": {
                                    "type": "ServiceFabricNode",
                                    "autoUpgradeMinorVersion": false,
                                    "protectedSettings": {
                                        "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                                        "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                                    },
                                    "publisher": "Microsoft.Azure.ServiceFabric",
                                    "settings": {
                                        "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                        "nodeTypeRef": "[parameters('vmNodeType1Name')]",
                                        "dataPath": "D:\\\\SvcFab",
                                        "durabilityLevel": "Silver",
                                        "enableParallelJobs": true,
                                        "nicPrefixOverride": "[parameters('subnet1Prefix')]",
                                        "certificate": {
                                            "commonNames": [
                                                "[parameters('certificateCommonName')]"
                                            ],
                                            "x509StoreName": "[parameters('certificateStoreValue')]"
                                        }
                                    },
                                    "typeHandlerVersion": "1.0"
                                }
                            },
                            {
                                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType1Name')]",
                                "properties": {
                                    "type": "IaaSDiagnostics",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "storageAccountName": "[parameters('applicationDiagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                                        "storageAccountEndPoint": "[parameters('storageAccountEndPoint')]"
                                    },
                                    "publisher": "Microsoft.Azure.Diagnostics",
                                    "settings": {
                                        "WadCfg": {
                                            "DiagnosticMonitorConfiguration": {
                                                "overallQuotaInMB": "50000",
                                                "EtwProviders": {
                                                    "EtwEventSourceProviderConfiguration": [
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Actors",
                                                            "scheduledTransferKeywordFilter": "1",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableActorEventTable"
                                                            }
                                                        },
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Services",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                                                            }
                                                        }
                                                    ],
                                                    "EtwManifestProviderConfiguration": [
                                                        {
                                                            "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                                            "scheduledTransferLogLevelFilter": "Information",
                                                            "scheduledTransferKeywordFilter": "4611686018427387904",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricSystemEventTable"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "StorageAccount": "[parameters('applicationDiagnosticsStorageAccountName')]"
                                    },
                                    "typeHandlerVersion": "1.5"
                                }
                            },
                            {
                                "name": "[concat(parameters('vmNodeType1Name'),'_InstallDependencies')]",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "https://stgcytestsfarc01.blob.core.windows.net/net472/install_net472.ps1",
                                            "https://stgcytestsfarc01.blob.core.windows.net/tls/TLSSettings.ps1",
                                            "https://stgcytestsfarc01.blob.core.windows.net/entry/entry.ps1"
                                        ],
                                        "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File entry.ps1 -NET472 -TLS"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "autoUpgradeMinorVersion": true,
                                    "publisher": "Microsoft.Azure.Security.Dsms",
                                    "type": "DSMSForWindows",
                                    "typeHandlerVersion": "2.15"
                                },
                                "name": "DsmsExtension"
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('nicName'), '-1')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('nicName'),'-',1)]",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbPoolID1')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatPoolID1')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    "id": "[variables('subnet1Ref')]"
                                                }
                                            }
                                        }
                                    ],
                                    "primary": true
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computernamePrefix": "[parameters('vmNodeType1Name')]",
                        "dsmsConfiguration": {
                            "certificates": [
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/chained/st/', parameters('clusterName'), '/sf.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/selfsigned/bt/', parameters('archiveBackendTenantName'), '/encryption-01.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/selfsigned/bt/', parameters('archiveBackendTenantName'), '/encryption-02.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/genevacustomers/monitoring/warmpath/', parameters('cloudEnvironment'), '/', parameters('WarmPathEndpoint'), '/azurearchivestorage/certificates/chained/stgcs.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/genevacustomers/monitoring/hotpath/', parameters('cloudEnvironment'), '/azurearchivestorage/certificates/chained/stmdm.pfx')]"
                                }
                            ],
                            "secrets": [
                                {
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/stg/global/storageaccounts/archivequeue/', parameters('archiveStorageAccountName'))]"
                                },
                                {
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/storageaccounts/bt/', parameters('archiveBackendTenantName'), '/', parameters('archiveBTQueueStorageAccount'))]"
                                }
                            ]
                        },
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "[parameters('SSLVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('SSLCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('GCSVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('GCSCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('KVMgmtVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('KVMgmtCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('MDMVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('MDMCertUrl')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                        },
                        "osDisk": {
                            "vhdContainers": [
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]"
                            ],
                            "name": "vmssosdisk",
                            "caching": "ReadOnly",
                            "createOption": "FromImage"
                        }
                    }
                }
            },
            "sku": {
                "name": "[parameters('vmNodeType1Size')]",
                "capacity": "[parameters('nt1InstanceCount')]",
                "tier": "Standard"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[parameters('vmNodeType2Name')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3])]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4])]",
                "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType2Name')))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('applicationDiagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "overprovision": "[parameters('overProvision')]",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat(parameters('vmNodeType2Name'),'_ServiceFabricNode')]",
                                "properties": {
                                    "type": "ServiceFabricNode",
                                    "autoUpgradeMinorVersion": false,
                                    "protectedSettings": {
                                        "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                                        "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                                    },
                                    "publisher": "Microsoft.Azure.ServiceFabric",
                                    "settings": {
                                        "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                        "nodeTypeRef": "[parameters('vmNodeType2Name')]",
                                        "dataPath": "D:\\\\SvcFab",
                                        "durabilityLevel": "Silver",
                                        "enableParallelJobs": true,
                                        "nicPrefixOverride": "[parameters('subnet2Prefix')]",
                                        "certificate": {
                                            "commonNames": [
                                                "[parameters('certificateCommonName')]"
                                            ],
                                            "x509StoreName": "[parameters('certificateStoreValue')]"
                                        }
                                    },
                                    "typeHandlerVersion": "1.0"
                                }
                            },
                            {
                                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType2Name')]",
                                "properties": {
                                    "type": "IaaSDiagnostics",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "storageAccountName": "[parameters('applicationDiagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                                        "storageAccountEndPoint": "[parameters('storageAccountEndPoint')]"
                                    },
                                    "publisher": "Microsoft.Azure.Diagnostics",
                                    "settings": {
                                        "WadCfg": {
                                            "DiagnosticMonitorConfiguration": {
                                                "overallQuotaInMB": "50000",
                                                "EtwProviders": {
                                                    "EtwEventSourceProviderConfiguration": [
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Actors",
                                                            "scheduledTransferKeywordFilter": "1",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableActorEventTable"
                                                            }
                                                        },
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Services",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                                                            }
                                                        }
                                                    ],
                                                    "EtwManifestProviderConfiguration": [
                                                        {
                                                            "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                                            "scheduledTransferLogLevelFilter": "Information",
                                                            "scheduledTransferKeywordFilter": "4611686018427387904",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricSystemEventTable"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "StorageAccount": "[parameters('applicationDiagnosticsStorageAccountName')]"
                                    },
                                    "typeHandlerVersion": "1.5"
                                }
                            },
                            {
                                "name": "[concat(parameters('vmNodeType2Name'),'_InstallDependencies')]",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "https://stgcytestsfarc01.blob.core.windows.net/net472/install_net472.ps1",
                                            "https://stgcytestsfarc01.blob.core.windows.net/tls/TLSSettings.ps1",
                                            "https://stgcytestsfarc01.blob.core.windows.net/entry/entry.ps1"
                                        ],
                                        "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File entry.ps1 -NET472 -TLS"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "autoUpgradeMinorVersion": true,
                                    "publisher": "Microsoft.Azure.Security.Dsms",
                                    "type": "DSMSForWindows",
                                    "typeHandlerVersion": "2.15"
                                },
                                "name": "DsmsExtension"
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('nicName'), '-2')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('nicName'),'-',2)]",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbPoolID2')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatPoolID2')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    "id": "[variables('subnet2Ref')]"
                                                }
                                            }
                                        }
                                    ],
                                    "primary": true
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computernamePrefix": "[parameters('vmNodeType2Name')]",
                        "dsmsConfiguration": {
                            "certificates": [
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/chained/st/', parameters('clusterName'), '/sf.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/selfsigned/bt/', parameters('archiveBackendTenantName'), '/encryption-01.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/certificates/selfsigned/bt/', parameters('archiveBackendTenantName'), '/encryption-02.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/genevacustomers/monitoring/warmpath/', parameters('cloudEnvironment'), '/', parameters('WarmPathEndpoint'), '/azurearchivestorage/certificates/chained/stgcs.pfx')]"
                                },
                                {
                                    "storeName": "my",
                                    "storeLocation": "LocalMachine",
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/genevacustomers/monitoring/hotpath/', parameters('cloudEnvironment'), '/azurearchivestorage/certificates/chained/stmdm.pfx')]"
                                }
                            ],
                            "secrets": [
                                {
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/stg/global/storageaccounts/archivequeue/', parameters('archiveStorageAccountName'))]"
                                },
                                {
                                    "sourceLocation": "[concat('https://', parameters('DsmsHostName'), '/dsms/storage-archive/storageaccounts/bt/', parameters('archiveBackendTenantName'), '/', parameters('archiveBTQueueStorageAccount'))]"
                                }
                            ]
                        },
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "[parameters('SSLVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('SSLCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('GCSVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('GCSCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('KVMgmtVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('KVMgmtCertUrl')]"
                                    }
                                ]
                            },
                            {
                                "sourceVault": {
                                    "id": "[parameters('MDMVaultID')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "My",
                                        "certificateUrl": "[parameters('MDMCertUrl')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                        },
                        "osDisk": {
                            "vhdContainers": [
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]"
                            ],
                            "name": "vmssosdisk",
                            "caching": "ReadOnly",
                            "createOption": "FromImage"
                        }
                    }
                }
            },
            "sku": {
                "name": "[parameters('vmNodeType2Size')]",
                "capacity": "[parameters('nt2InstanceCount')]",
                "tier": "Standard"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "type": "Microsoft.ServiceFabric/clusters",
            "name": "[parameters('clusterName')]",
            "location": "[parameters('clusterLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName'))]"
            ],
            "properties": {
                "certificateCommonNames": {
                    "commonNames": [
                        {
                            "certificateCommonName": "[parameters('certificateCommonName')]",
                            "certificateIssuerThumbprint": ""
                        }
                    ],
                    "x509StoreName": "[parameters('certificateStoreValue')]"
                },
                "clientCertificateCommonNames": [
                ],
                "clientCertificateThumbprints": [
                ],
                "clusterState": "Default",
                "diagnosticsStorageAccountConfig": {
                    "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.blob]",
                    "protectedAccountKeyName": "StorageAccountKey1",
                    "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]",
                    "storageAccountName": "[parameters('supportLogStorageAccountName')]",
                    "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.table]"
                },
                "fabricSettings": [
                    {
                        "parameters": [
                            {
                                "name": "ClusterProtectionLevel",
                                "value": "[parameters('clusterProtectionLevel')]"
                            },
                            {
                                "name": "ClientClaimAuthEnabled",
                                "value": true
                            },
                            {
                                "name": "ClientClaims",
                                "value": "[parameters('clientClaims')]"
                            },
                            {
                                "name": "AdminClientClaims",
                                "value": "[parameters('adminClientClaims')]"
                            }
                        ],
                        "name": "Security"
                    },
                    {
                        "parameters": [
                            {
                                "name": "DSTSDnsName",
                                "value": "[parameters('DSTSDnsName')]",
                                "IsEncrypted": false
                            },
                            {
                                "name": "DSTSRealm",
                                "value": "[parameters('DSTSRealm')]",
                                "IsEncrypted": false
                            },
                            {
                                "name": "CloudServiceName",
                                "value": "[parameters('cloudServiceName')]",
                                "IsEncrypted": false
                            },
                            {
                                "name": "CloudServiceDnsName",
                                "value": "[parameters('clusterEndpoint')]",
                                "IsEncrypted": false
                            }
                        ],
                        "name": "DSTSTokenValidationService"
                    }
                ],
                "managementEndpoint": "[concat('https://',reference(concat(parameters('lbIPName'),'-','0')).dnsSettings.fqdn,':',parameters('nt0fabricHttpGatewayPort'))]",
                "nodeTypes": [
                    {
                        "name": "[parameters('vmNodeType0Name')]",
                        "applicationPorts": {
                            "endPort": "[parameters('nt0applicationEndPort')]",
                            "startPort": "[parameters('nt0applicationStartPort')]"
                        },
                        "clientConnectionEndpointPort": "[parameters('nt0fabricTcpGatewayPort')]",
                        "durabilityLevel": "Silver",
                        "ephemeralPorts": {
                            "endPort": "[parameters('nt0ephemeralEndPort')]",
                            "startPort": "[parameters('nt0ephemeralStartPort')]"
                        },
                        "httpGatewayEndpointPort": "[parameters('nt0fabricHttpGatewayPort')]",
                        "isPrimary": true,
                        "placementProperties": {
                            "role": "primary"
                        },
                        "vmInstanceCount": "[parameters('nt0InstanceCount')]"
                    },
                    {
                        "name": "[parameters('vmNodeType1Name')]",
                        "applicationPorts": {
                            "endPort": "[parameters('nt1applicationEndPort')]",
                            "startPort": "[parameters('nt1applicationStartPort')]"
                        },
                        "clientConnectionEndpointPort": "[parameters('nt1fabricTcpGatewayPort')]",
                        "durabilityLevel": "Silver",
                        "ephemeralPorts": {
                            "endPort": "[parameters('nt1ephemeralEndPort')]",
                            "startPort": "[parameters('nt1ephemeralStartPort')]"
                        },
                        "httpGatewayEndpointPort": "[parameters('nt1fabricHttpGatewayPort')]",
                        "isPrimary": false,
                        "placementProperties": {
                            "role": "secondary"
                        },
                        "vmInstanceCount": "[parameters('nt1InstanceCount')]"
                    },
                    {
                        "name": "[parameters('vmNodeType2Name')]",
                        "applicationPorts": {
                            "endPort": "[parameters('nt2applicationEndPort')]",
                            "startPort": "[parameters('nt2applicationStartPort')]"
                        },
                        "clientConnectionEndpointPort": "[parameters('nt2fabricTcpGatewayPort')]",
                        "durabilityLevel": "Silver",
                        "ephemeralPorts": {
                            "endPort": "[parameters('nt2ephemeralEndPort')]",
                            "startPort": "[parameters('nt2ephemeralStartPort')]"
                        },
                        "httpGatewayEndpointPort": "[parameters('nt2fabricHttpGatewayPort')]",
                        "isPrimary": false,
                        "placementProperties": {
                            "role": "tertiary"
                        },
                        "vmInstanceCount": "[parameters('nt2InstanceCount')]"
                    }
                ],
                "provisioningState": "Default",
                "reliabilityLevel": "silver",
                "upgradeMode": "Automatic",
                "vmImage": "Windows"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        }
    ],
    "outputs": {
        "clusterProperties": {
            "value": "[reference(parameters('clusterName'))]",
            "type": "object"
        }
    }
}
