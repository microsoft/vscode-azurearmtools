{
    "$schema": "./ExpressionMetadata.schema.json",
    "functionSignatures": [
        {
            "description": "Returns the sum of the two provided integers.",
            "expectedUsage": "add(operand1, operand2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "add"
        },
        {
            "description": "Checks whether all parameter values are true.",
            "expectedUsage": "and(arg1, arg2, ...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "and"
        },
        {
            "description": "Converts the value to an array.",
            "expectedUsage": "array(convertToArray)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "array"
        },
        {
            "description": "Returns the base64 representation of the input string.",
            "expectedUsage": "base64(inputString)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "base64"
        },
        {
            "description": "Converts a base64 representation to a JSON object.",
            "expectedUsage": "base64ToJson(base64Value)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "base64ToJson"
        },
        {
            "description": "Converts a base64 representation to a string.",
            "expectedUsage": "base64ToString(base64Value)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "base64ToString"
        },
        {
            "description": "Converts the parameter to a boolean.",
            "expectedUsage": "bool(arg1)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "bool"
        },
        {
            "description": "Returns first non-null value from the parameters. Empty strings, empty arrays, and empty objects are not null.",
            "expectedUsage": "coalesce(arg1, arg2, arg3, ...)",
            "maximumArguments": null,
            "minimumArguments": 1,
            "name": "coalesce"
        },
        {
            "description": "Combines multiple values and returns the concatenated result. This function can take any number of arguments, and can accept either strings or arrays for the parameters.",
            "expectedUsage": "concat(arg1, arg2, arg3, ...)",
            "maximumArguments": null,
            "minimumArguments": 0,
            "name": "concat"
        },
        {
            "description": "Checks whether an array contains a value, an object contains a key, or a string contains a substring.",
            "expectedUsage": "contains(container, itemToFind)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "contains"
        },
        {
            "description": "Returns the current index of an iteration loop.\nThis function is always used with a copy object.",
            "expectedUsage": "copyIndex([offset]) or copyIndex(loopName, [offset])",
            "maximumArguments": 2,
            "minimumArguments": 0,
            "name": "copyIndex"
        },
        {
            "description": "Creates an array from the parameters. If no parameters specified, creates an empty array.",
            "expectedUsage": "createArray(arg1, arg2, arg3, ...)",
            "maximumArguments": null,
            "minimumArguments": 0,
            "name": "createArray"
        },
        {
            "description": "Creates an object from the keys and values provided in the arguments.",
            "expectedUsage": "createObject(key1, value1, key2, value2, ...)",
            "maximumArguments": null,
            "minimumArguments": 0,
            "name": "createObject"
        },
        {
            "description": "Converts a value to a data URI.",
            "expectedUsage": "dataUri(stringToConvert)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "dataUri"
        },
        {
            "description": "Converts a data URI formatted value to a string.",
            "expectedUsage": "dataUriToString(dataUriToConvert)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "dataUriToString"
        },
        {
            "description": "Adds a time duration to a base value. ISO 8601 format is expected.",
            "expectedUsage": "dateTimeAdd(base, duration, [format])",
            "maximumArguments": 3,
            "minimumArguments": 2,
            "name": "dateTimeAdd"
        },
        {
            "description": "Converts an epoch time integer value to an ISO8601 dateTime string value.",
            "expectedUsage": "dateTimeFromEpoch(epochTime)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "dateTimeFromEpoch"
        },
        {
            "description": "Converts an ISO8601 dateTime string to an epoch time integer value.",
            "expectedUsage": "dateTimeToEpoch(dateTime)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "dateTimeToEpoch"
        },
        {
            "description": "Returns information about the current deployment operation. This function returns the object that is passed during deployment. The properties in the returned object will differ based on whether the deployment object is passed as a link or as an in-line object.",
            "expectedUsage": "deployment()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "deployment",
            "returnValueMembers": [
                {
                    "name": "name"
                },
                {
                    "name": "properties"
                },
                {
                    "name": "location"
                }
            ]
        },
        {
            "description": "Returns the integer division of the two provided integers.",
            "expectedUsage": "div(operand1, operand2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "div"
        },
        {
            "description": "Determines if an array, object, or string is empty.",
            "expectedUsage": "empty(itemToTest)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "empty"
        },
        {
            "description": "Determines whether a string ends with a value. The comparison is case-insensitive.",
            "expectedUsage": "endsWith(stringToSearch, stringToFind)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "endsWith"
        },
        {
            "description": "Returns information about the current cloud environment. The function returns an object that contains endpoints and other information specific to the cloud used for the deployment.  The properties in the returned object may differ based on the capabilities of the cloud.",
            "expectedUsage": "environment()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "environment",
            "returnValueMembers": [
                {
                    "name": "name"
                },
                {
                    "name": "gallery"
                },
                {
                    "name": "graph"
                },
                {
                    "name": "portal"
                },
                {
                    "name": "graphAudience"
                },
                {
                    "name": "activeDirectoryDataLake"
                },
                {
                    "name": "batch"
                },
                {
                    "name": "media"
                },
                {
                    "name": "sqlManagement"
                },
                {
                    "name": "vmImageAliasDoc"
                },
                {
                    "name": "resourceManager"
                },
                {
                    "name": "authentication"
                },
                {
                    "name": "suffixes"
                }
            ]
        },
        {
            "description": "Checks whether two values equal each other.",
            "expectedUsage": "equals(arg1, arg2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "equals"
        },
        {
            "behaviors": [
                "usesResourceIdCompletions"
            ],
            "description": "Returns the unique resource identifier of an extension resource. The resourceId parameter may be a resourceId of any scope or resourceId function. You use this function to create a resourceId for a given resource as required by a property value.",
            "expectedUsage": "extensionResourceId(resourceId, resourceType, resourceName1, [resourceName2]...)",
            "maximumArguments": null,
            "minimumArguments": 3,
            "name": "extensionResourceId"
        },
        {
            "description": "Returns a boolean value that is always false.",
            "expectedUsage": "false()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "false"
        },
        {
            "description": "Returns the first element of the array, or first character of the string.",
            "expectedUsage": "first(arg1)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "first"
        },
        {
            "description": "Converts the value to a floating point number. You only use this function when passing custom parameters to an application, such as a Logic App.",
            "expectedUsage": "float(arg1)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "float"
        },
        {
            "description": "Creates a formatted string from input values. It uses the same formatting options as the System.String.Format method in .NET.",
            "expectedUsage": "format(formatString, arg1, arg2, ...)",
            "maximumArguments": null,
            "minimumArguments": 1,
            "name": "format"
        },
        {
            "description": "Checks whether the first value is greater than the second value.",
            "expectedUsage": "greater(arg1, arg2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "greater"
        },
        {
            "description": "Checks whether the first value is greater than or equal to the second value.",
            "expectedUsage": "greaterOrEquals(arg1, arg2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "greaterOrEquals"
        },
        {
            "description": "This function is helpful when you need to create a value in the format of a globally unique identifier. You provide parameter values that limit the scope of uniqueness for the result. You can specify whether the name is unique down to subscription, resource group, or deployment. The returned value is not a random string, but rather the result of a hash function. The returned value is 36 characters long. It is not globally unique.",
            "expectedUsage": "guid(baseString, ...)",
            "maximumArguments": null,
            "minimumArguments": 1,
            "name": "guid"
        },
        {
            "description": "Returns a value based on whether a condition is true or false.",
            "expectedUsage": "if(condition, trueValue, falseValue)",
            "maximumArguments": 3,
            "minimumArguments": 3,
            "name": "if"
        },
        {
            "description": "Returns the first position of a value within a string. The comparison is case-insensitive.",
            "expectedUsage": "indexOf(stringToSearch, stringToFind)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "indexOf"
        },
        {
            "description": "Converts the specified value to Integer.",
            "expectedUsage": "int(valueToConvert)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "int"
        },
        {
            "description": "Returns a single array or object with the common elements from the parameters.",
            "expectedUsage": "intersection(arg1, arg2, arg3, ...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "intersection"
        },
        {
            "description": "Returns an array of keys and values for an object. Elements are consistently ordered alphabetically by key.",
            "expectedUsage": "items(obj)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "items"
        },
        {
            "description": "Returns a JSON object from the specified string, or an empty object when null is specified ",
            "expectedUsage": "json(arg1)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "json"
        },
        {
            "description": "Returns the last element of the array, or last character of the string.",
            "expectedUsage": "last(arg1)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "last"
        },
        {
            "description": "Returns the last position of a value within a string. The comparison is case-insensitive.",
            "expectedUsage": "lastIndexOf(stringToSearch, stringToFind)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "lastIndexOf"
        },
        {
            "description": "Returns the number of elements in an array or the number of characters in a string. You can use this function with an array to specify the number of iterations when creating resources.",
            "expectedUsage": "length(array/string)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "length"
        },
        {
            "description": "Checks whether the first value is less than the second value.",
            "expectedUsage": "less(arg1, arg2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "less"
        },
        {
            "description": "Checks whether the first value is less than or equal to the second value.",
            "expectedUsage": "lessOrEquals(arg1, arg2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "lessOrEquals"
        },
        {
            "description": "Performs a GET call to a REST API on the given resource. The function arguments and the returned data depend on the resource type. See https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/template-functions-resource#valid-uses.",
            "expectedUsage": "list(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "list"
        },
        {
            "description": "Creates and returns a SAS token with the specified permissions and expiry from the requestContent. The requestContent object must contain the signedServices, signedResourceTypes, signedPermission and signedExpiry properties.",
            "expectedUsage": "listAccountSas(resourceName/resourceIdentifier, apiVersion, requestContent)",
            "maximumArguments": 3,
            "minimumArguments": 3,
            "name": "listAccountSas",
            "returnValueMembers": [
                {
                    "name": "accountSasToken"
                }
            ]
        },
        {
            "description": "Gets the primary and secondary admin API keys for the specified Azure Search service. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. You can use the function to get the primaryKey and secondaryKey.",
            "expectedUsage": "listAdminKeys(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listAdminKeys",
            "returnValueMembers": [
                {
                    "name": "primaryKey"
                },
                {
                    "name": "secondaryKey"
                }
            ]
        },
        {
            "description": "Retrieves the authentication keys for a DataFactory Integration Runtime. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. You can use the function to get the available authkeys.",
            "expectedUsage": "listAuthKeys(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listAuthKeys",
            "returnValueMembers": [
                {
                    "name": "authKey1"
                },
                {
                    "name": "authKey2"
                }
            ]
        },
        {
            "description": "Get callback URL for a trigger of a workflow version. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. See https://docs.microsoft.com/en-us/rest/api/logic/WorkflowVersions/ListCallbackUrl#workflowtriggercallbackurl for more information.",
            "expectedUsage": "listCallbackUrl(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listCallbackUrl",
            "returnValueMembers": [
                {
                    "name": "value"
                },
                {
                    "name": "method"
                },
                {
                    "name": "basePath"
                },
                {
                    "name": "queries"
                },
                {
                    "name": "relativePath"
                },
                {
                    "name": "relativePathParameters"
                }
            ]
        },
        {
            "description": "Lists a Channel registration for a Bot Service including secrets.  The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. Example: [listChannelWithKeys(resourceId('Microsoft.BotService/botServices/channels', parameters('botId'), 'DirectLineChannel'), '2018-07-12').properties.properties.sites[0].key]",
            "expectedUsage": "listChannelWithKeys(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listChannelWithKeys",
            "returnValueMembers": [
                {
                    "name": "resource"
                },
                {
                    "name": "setting"
                },
                {
                    "name": "id"
                },
                {
                    "name": "location"
                },
                {
                    "name": "properties"
                },
                {
                    "name": "provisioningState"
                },
                {
                    "name": "entityTag"
                },
                {
                    "name": "changedTime"
                }
            ]
        },
        {
            "description": "Gets cluster admin credential of a managed cluster. Returns an array of objects with a 'name' and 'value' property. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listClusterAdminCredential(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listClusterAdminCredential",
            "returnValueMembers": [
                {
                    "name": "kubeconfigs"
                }
            ]
        },
        {
            "description": "Lists the connection strings for the specified Azure Cosmos DB database account. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listConnectionStrings(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listConnectionStrings",
            "returnValueMembers": [
                {
                    "name": "connectionStrings"
                }
            ]
        },
        {
            "description": "Lists the login credentials for the specified container registry. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listCredentials(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listCredentials",
            "returnValueMembers": [
                {
                    "name": "username"
                },
                {
                    "name": "passwords"
                }
            ]
        },
        {
            "description": "Gets the accessProfile for the specified role for a managed cluster. The properties object contains a 'kubeConfig' property. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listCredential(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listCredential",
            "returnValueMembers": [
                {
                    "name": "properties"
                }
            ]
        },
        {
            "$comment": "There are more than 20 possible return members, depending on the RP that's being queried.  This causes incorrect Intellisense and false positives for validation (in VS), so turning this off by not specifying returnValueMembers at all. VSCode doesn't show the same validation errors, but intelisense still won't show correct values, and it's easier to keep vscode and vs in sync, so doing it there, too.",
            "description": "Returns the keys of a storage account. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. You can use the function to get the primary (key[0]) and secondary key (key[1]).",
            "expectedUsage": "listKeys(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listKeys"
        },
        {
            "description": "Returns a value from the App Config store with Key/Label specified in the request. The KeyLabelObject parameter is a JSON object with the two properties: \"key\" and \"label\" as required by the values in the store.",
            "expectedUsage": "listKeyValue(resourceName/resourceIdentifier, apiVersion, KeyLabelObject)",
            "maximumArguments": 3,
            "minimumArguments": 3,
            "name": "listKeyValue",
            "returnValueMembers": [
                {
                    "name": "value"
                }
            ]
        },
        {
            "description": "Lists the virtual network gateway package. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listPackage(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listPackage"
        },
        {
            "description": "Returns the list of query API keys for the given Azure Search service. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. The function returns an object array with a 'name' and 'key' property for each member.",
            "expectedUsage": "listQueryKeys(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listQueryKeys",
            "returnValueMembers": [
                {
                    "name": "value"
                }
            ]
        },
        {
            "description": "List the secrets of a key vault. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listSecrets(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listSecrets"
        },
        {
            "description": "Creates and returns a SAS token for the specific resource with the specified permissions and expiry from the requestContent. The requestContent object must contain the signedServices, signedResourceTypes, signedPermission and signedExpiry properties.",
            "expectedUsage": "listServiceSas(resourceName/resourceIdentifier, apiVersion, requestContent)",
            "maximumArguments": 3,
            "minimumArguments": 3,
            "name": "listServiceSas",
            "returnValueMembers": [
                {
                    "name": "serviceSasToken"
                }
            ]
        },
        {
            "description": "Returns the status of a function trigger. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "expectedUsage": "listSyncFunctionTriggerStatus(resourceName/resourceIdentifier, apiVersion)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "listSyncFunctionTriggerStatus",
            "returnValueMembers": [
                {
                    "name": "status"
                }
            ]
        },
        {
            "description": "Returns a structured object that represents the current management group. This function is only valid in templates that are deployed at management group scope",
            "expectedUsage": "managementGroup()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "managementGroup",
            "returnValueMembers": [
                {
                    "name": "id"
                },
                {
                    "name": "name"
                },
                {
                    "name": "type"
                },
                {
                    "name": "properties"
                }
            ]
        },
        {
            "description": "Returns the maximum value from an array of integers or a comma-separated list of integers.",
            "expectedUsage": "max(arg1, ...)",
            "maximumArguments": null,
            "minimumArguments": 1,
            "name": "max"
        },
        {
            "description": "Returns the minimum value from an array of integers or a comma-separated list of integers.",
            "expectedUsage": "min(arg1, ...)",
            "maximumArguments": null,
            "minimumArguments": 1,
            "name": "min"
        },
        {
            "description": "Returns the remainder of the integer division using the two provided integers.",
            "expectedUsage": "mod(operand1, operand2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "mod"
        },
        {
            "description": "Returns the multiplication of the two provided integers.",
            "expectedUsage": "mul(operand1, operand2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "mul"
        },
        {
            "description": "Returns a globally unique identifier (GUID). This function may only be used as a defaultValue on a parameter.",
            "expectedUsage": "newGuid()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "newGuid"
        },
        {
            "description": "Converts boolean value to its opposite value.",
            "expectedUsage": "not(arg1)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "not"
        },
        {
            "description": "Returns a value that is always null, equivalent to json('null').",
            "expectedUsage": "null()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "null"
        },
        {
            "description": "Checks whether any parameter value is true.",
            "expectedUsage": "or(arg1, arg2, ...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "or"
        },
        {
            "description": "Returns a right-aligned string by adding characters to the left until reaching the total specified length.",
            "expectedUsage": "padLeft(stringToPad, totalLength, paddingCharacter)",
            "maximumArguments": 3,
            "minimumArguments": 3,
            "name": "padLeft"
        },
        {
            "description": "Returns a parameter value. The specified parameter name must be defined in the parameters section of the template.",
            "expectedUsage": "parameters(parameterName)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "parameters"
        },
        {
            "description": "Determines whether a resource type supports zones for a region.",
            "expectedUsage": "pickZones(providerNamespace, resourceType, location, [numberOfZones], [offset])",
            "maximumArguments": 5,
            "minimumArguments": 3,
            "name": "pickZones"
        },
        {
            "description": "The providers function has been deprecated. We no longer recommend using it. If you used this function to get an API version for the resource provider, we recommend that you provide a specific API version in your template. Using a dynamically returned API version can break your template if the properties change between versions.",
            "expectedUsage": "providers(providerNamespace, [resourceType])",
            "maximumArguments": 2,
            "minimumArguments": 1,
            "name": "providers"
        },
        {
            "description": "Creates an array of integers from a starting integer and containing a number of items.",
            "expectedUsage": "range(startingInteger, numberOfElements)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "range"
        },
        {
            "description": "Enables an expression to derive its value from another resource's runtime state.",
            "expectedUsage": "reference(resourceName/resourceIdentifier, [apiVersion], ['Full'])",
            "maximumArguments": 3,
            "minimumArguments": 1,
            "name": "reference"
        },
        {
            "description": "Returns a new string with all instances of one character in the specified string replaced by another character.",
            "expectedUsage": "replace(originalString, oldCharacter, newCharacter)",
            "maximumArguments": 3,
            "minimumArguments": 3,
            "name": "replace"
        },
        {
            "description": "Returns a structured object that represents the current resource group.",
            "expectedUsage": "resourceGroup()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "resourceGroup",
            "returnValueMembers": [
                {
                    "name": "id"
                },
                {
                    "name": "name"
                },
                {
                    "name": "location"
                },
                {
                    "name": "tags"
                },
                {
                    "name": "properties"
                }
            ]
        },
        {
            "behaviors": [
                "usesResourceIdCompletions"
            ],
            "description": "Returns the unique resource identifier of a resource group scoped resource. You use this function to create a resourceId for a given resource as required by a property value.",
            "expectedUsage": "resourceId([subscriptionId], [resourceGroupName], resourceType, resourceName1, [resourceName2]...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "resourceId"
        },
        {
            "description": "Returns an array or string with all of the elements or characters after the specified number in the array or string.",
            "expectedUsage": "skip(originalValue, numberToSkip)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "skip"
        },
        {
            "description": "Returns an array of strings that contains the substrings of the input string that are delimited by the sent delimiters.",
            "expectedUsage": "split(inputString, delimiter)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "split"
        },
        {
            "description": "Determines whether a string starts with a value. The comparison is case-insensitive.",
            "expectedUsage": "startsWith(stringToSEarch, stringToFind)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "startsWith"
        },
        {
            "description": "Converts the specified value to String.",
            "expectedUsage": "string(valueToConvert)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "string"
        },
        {
            "description": "Returns the subtraction of the two provided integers.",
            "expectedUsage": "sub(operand1, operand2)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "sub"
        },
        {
            "description": "Returns details about the subscription.",
            "expectedUsage": "subscription()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "subscription",
            "returnValueMembers": [
                {
                    "name": "displayName"
                },
                {
                    "name": "id"
                },
                {
                    "name": "subscriptionId"
                },
                {
                    "name": "tenantId"
                }
            ]
        },
        {
            "behaviors": [
                "usesResourceIdCompletions"
            ],
            "description": "Returns the unique resource identifier of a subscription scoped resource. You use this function to create a resourceId for a given resource as required by a property value.",
            "expectedUsage": "subscriptionResourceId([subscriptionId], resourceType, resourceName1, [resourceName2]...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "subscriptionResourceId"
        },
        {
            "description": "Returns a substring that starts at the specified character position and contains the specified number of characters.",
            "expectedUsage": "substring(stringToParse, startIndex, length)",
            "maximumArguments": 3,
            "minimumArguments": 1,
            "name": "substring"
        },
        {
            "description": "Returns an array or string with the specified number of elements or characters from the start of the array or string.",
            "expectedUsage": "take(originalValue, numberToTake)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "take"
        },
        {
            "description": "Returns a structured object that represents the current tenant.",
            "expectedUsage": "tenant()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "tenant",
            "returnValueMembers": [
                {
                    "name": "country"
                },
                {
                    "name": "countryCode"
                },
                {
                    "name": "displayName"
                },
                {
                    "name": "tenantId"
                }
            ]
        },
        {
            "behaviors": [
                "usesResourceIdCompletions"
            ],
            "description": "Returns the unique resource identifier of a tenant scoped resource. You use this function to create a resourceId for a given resource as required by a property value.",
            "expectedUsage": "tenantResourceId(resourceType, resourceName1, [resourceName2]...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "tenantResourceId"
        },
        {
            "description": "Converts the specified string to lower case.",
            "expectedUsage": "toLower(string)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "toLower"
        },
        {
            "description": "Converts the specified string to upper case.",
            "expectedUsage": "toUpper(string)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "toUpper"
        },
        {
            "description": "Removes all leading and trailing white-space characters from the specified string.",
            "expectedUsage": "trim(stringToTrim)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "trim"
        },
        {
            "description": "Returns a boolean value that is always true.",
            "expectedUsage": "true()",
            "maximumArguments": 0,
            "minimumArguments": 0,
            "name": "true"
        },
        {
            "description": "Returns a single array or object with all elements from the parameters. Duplicate values or keys are only included once.",
            "expectedUsage": "union(arg1, arg2, arg3, ...)",
            "maximumArguments": null,
            "minimumArguments": 2,
            "name": "union"
        },
        {
            "description": "Creates a deterministic hash string based on the values provided as parameters.\n### Remarks\nThis function is helpful when you need to create a unique name for a resource. You provide parameter values that represent the level of uniqueness for the result. You can specify whether the name is unique for your subscription, resource group, or deployment.\nThe returned value isn't a random string, but rather the result of a hash function. The returned value is 13 characters long. It isn't globally unique. You may want to combine the value with a prefix from your naming convention to create a name that is meaningful.\n### Example\n`[concat('storage', uniqueString(resourceGroup().id))]`",
            "expectedUsage": "uniqueString(baseString, ...)",
            "maximumArguments": null,
            "minimumArguments": 1,
            "name": "uniqueString"
        },
        {
            "description": "Creates an absolute URI by combining the baseUri and the relativeUri string.",
            "expectedUsage": "uri(baseUri, relativeUri)",
            "maximumArguments": 2,
            "minimumArguments": 2,
            "name": "uri"
        },
        {
            "description": "Encodes a URI.",
            "expectedUsage": "uriComponent(stringToEncode)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "uriComponent"
        },
        {
            "description": "Returns a string of a URI encoded value.",
            "expectedUsage": "uriComponentToString(uriEncodedString)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "uriComponentToString"
        },
        {
            "description": "Returns the current (UTC) datetime value in the format provided. If no format is provided the ISO 8601 (yyyyMMddTHH:mm:ssZ) format will be used. This function may only be used as a defaultValue on a parameter.",
            "expectedUsage": "utcNow([format])",
            "maximumArguments": 1,
            "minimumArguments": 0,
            "name": "utcNow"
        },
        {
            "description": "Returns the value of variable. The specified variable name must be defined in the variables section of the template.",
            "expectedUsage": "variables(variableName)",
            "maximumArguments": 1,
            "minimumArguments": 1,
            "name": "variables"
        }
    ]
}
