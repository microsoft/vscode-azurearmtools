{
    "$schema": "./ExpressionMetadata.schema.json",
    "functionSignatures": [
        {
            "name": "add",
            "expectedUsage": "add(operand1, operand2)",
            "description": "Returns the sum of the two provided integers.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "and",
            "expectedUsage": "and(arg1, arg2)",
            "description": "Checks whether both parameter values are true.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "array",
            "expectedUsage": "array(convertToArray)",
            "description": "Converts the value to an array.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "base64",
            "expectedUsage": "base64(inputString)",
            "description": "Returns the base64 representation of the input string.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "base64ToJson",
            "expectedUsage": "base64ToJson(base64Value)",
            "description": "Converts a base64 representation to a JSON object.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "base64ToString",
            "expectedUsage": "base64ToString(base64Value)",
            "description": "Converts a base64 representation to a string.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "bool",
            "expectedUsage": "bool(arg1)",
            "description": "Converts the parameter to a boolean.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "coalesce",
            "expectedUsage": "coalesce(arg1, arg2, arg3, ...)",
            "description": "Returns first non-null value from the parameters. Empty strings, empty arrays, and empty objects are not null.",
            "minimumArguments": 1,
            "maximumArguments": null
        },
        {
            "name": "concat",
            "expectedUsage": "concat(arg1, arg2, arg3, ...)",
            "description": "Combines multiple values and returns the concatenated result. This function can take any number of arguments, and can accept either strings or arrays for the parameters.",
            "minimumArguments": 0,
            "maximumArguments": null
        },
        {
            "name": "contains",
            "expectedUsage": "contains(container, itemToFind)",
            "description": "Checks whether an array contains a value, an object contains a key, or a string contains a substring.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "copyIndex",
            "expectedUsage": "copyIndex([offset]) or copyIndex(loopName, [offset])",
            "description": "Returns the current index of an iteration loop.\nThis function is always used with a copy object.",
            "minimumArguments": 0,
            "maximumArguments": 2
        },
        {
            "name": "createArray",
            "expectedUsage": "createArray(arg1, arg2, arg3, ...)",
            "description": "Creates an array from the parameters.",
            "minimumArguments": 1,
            "maximumArguments": null
        },
        {
            "name": "dataUri",
            "expectedUsage": "dataUri(stringToConvert)",
            "description": "Converts a value to a data URI.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "dataUriToString",
            "expectedUsage": "dataUriToString(dataUriToConvert)",
            "description": "Converts a data URI formatted value to a string.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "deployment",
            "expectedUsage": "deployment()",
            "description": "Returns information about the current deployment operation. This function returns the object that is passed during deployment. The properties in the returned object will differ based on whether the deployment object is passed as a link or as an in-line object.",
            "minimumArguments": 0,
            "maximumArguments": 0,
            "returnValueMembers": [
                {
                    "name": "name"
                },
                {
                    "name": "properties"
                }
            ]
        },
        {
            "name": "div",
            "expectedUsage": "div(operand1, operand2)",
            "description": "Returns the integer division of the two provided integers.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "empty",
            "expectedUsage": "empty(itemToTest)",
            "description": "Determines if an array, object, or string is empty.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "endsWith",
            "expectedUsage": "endsWith(stringToSearch, stringToFind)",
            "description": "Determines whether a string ends with a value. The comparison is case-insensitive.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "equals",
            "expectedUsage": "equals(arg1, arg2)",
            "description": "Checks whether two values equal each other.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "first",
            "expectedUsage": "first(arg1)",
            "description": "Returns the first element of the array, or first character of the string.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "float",
            "expectedUsage": "float(arg1)",
            "description": "Converts the value to a floating point number. You only use this function when passing custom parameters to an application, such as a Logic App.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "greater",
            "expectedUsage": "greater(arg1, arg2)",
            "description": "Checks whether the first value is greater than the second value.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "greaterOrEquals",
            "expectedUsage": "greaterOrEquals(arg1, arg2)",
            "description": "Checks whether the first value is greater than or equal to the second value.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "guid",
            "expectedUsage": "guid(baseString, ...)",
            "description": "This function is helpful when you need to create a value in the format of a globally unique identifier. You provide parameter values that limit the scope of uniqueness for the result. You can specify whether the name is unique down to subscription, resource group, or deployment. The returned value is not a random string, but rather the result of a hash function. The returned value is 36 characters long. It is not globally unique.",
            "minimumArguments": 1,
            "maximumArguments": null
        },
        {
            "name": "if",
            "expectedUsage": "if(condition, trueValue, falseValue)",
            "description": "Returns a value based on whether a condition is true or false.",
            "minimumArguments": 3,
            "maximumArguments": 3
        },
        {
            "name": "indexOf",
            "expectedUsage": "indexOf(stringToSearch, stringToFind)",
            "description": "Returns the first position of a value within a string. The comparison is case-insensitive.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "int",
            "expectedUsage": "int(valueToConvert)",
            "description": "Converts the specified value to Integer.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "intersection",
            "expectedUsage": "intersection(arg1, arg2, arg3, ...)",
            "description": "Returns a single array or object with the common elements from the parameters.",
            "minimumArguments": 2,
            "maximumArguments": null
        },
        {
            "name": "json",
            "expectedUsage": "json(arg1)",
            "description": "Returns a JSON object from the specified string, or an empty object when null is specified ",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "last",
            "expectedUsage": "last(arg1)",
            "description": "Returns the last element of the array, or last character of the string.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "lastIndexOf",
            "expectedUsage": "lastIndexOf(stringToSearch, stringToFind)",
            "description": "Returns the last position of a value within a string. The comparison is case-insensitive.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "length",
            "expectedUsage": "length(array\/string)",
            "description": "Returns the number of elements in an array or the number of characters in a string. You can use this function with an array to specify the number of iterations when creating resources.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "less",
            "expectedUsage": "less(arg1, arg2)",
            "description": "Checks whether the first value is less than the second value.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "lessOrEquals",
            "expectedUsage": "lessOrEquals(arg1, arg2)",
            "description": "Checks whether the first value is less than or equal to the second value.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "listAccountSas",
            "expectedUsage": "listAccountSas(resourceName\/resourceIdentifier, apiVersion, requestContent)",
            "description": "Creates and returns a SAS token with the specified permissions and expiry from the requestContent. The requestContent object must contain the signedServices, signedResourceTypes, signedPermission and signedExpiry properties.",
            "minimumArguments": 3,
            "maximumArguments": 3,
            "returnValueMembers": [
                {
                    "name": "accountSasToken"
                }
            ]
        },
        {
            "name": "listKeys",
            "expectedUsage": "listKeys(resourceName\/resourceIdentifier, apiVersion)",
            "description": "Returns the keys of a storage account. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. You can use the function to get the primaryKey and secondaryKey.",
            "minimumArguments": 2,
            "maximumArguments": 2,
            "returnValueMembers": [
                {
                    "name": "keys"
                }
            ]
        },
        {
            "name": "listPackage",
            "expectedUsage": "listPackage(resourceName\/resourceIdentifier, apiVersion)",
            "description": "Lists the virtual network gateway package. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "listCallbackUrl",
            "expectedUsage": "listCallbackUrl(resourceName\/resourceIdentifier, apiVersion)",
            "description": "Get callback URL for a trigger of a workflow version. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName. See https://docs.microsoft.com/en-us/rest/api/logic/WorkflowVersions/ListCallbackUrl#workflowtriggercallbackurl for more information.",
            "minimumArguments": 2,
            "maximumArguments": 2,
            "returnValueMembers": [
                {
                    "name": "value"
                },
                {
                    "name": "method"
                },
                {
                    "name": "basePath"
                },
                {
                    "name": "queries"
                },
                {
                    "name": "relativePath"
                },
                {
                    "name": "relativePathParameters"
                }
            ]
        },
        {
            "name": "listSecrets",
            "expectedUsage": "listSecrets(resourceName\/resourceIdentifier, apiVersion)",
            "description": "List the secrets of a key vault. The resourceId can be specified by using the resourceId function or by using the format providerNamespace/resourceType/resourceName.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "max",
            "expectedUsage": "max(arg1, ...)",
            "description": "Returns the maximum value from an array of integers or a comma-separated list of integers.",
            "minimumArguments": 1,
            "maximumArguments": null
        },
        {
            "name": "min",
            "expectedUsage": "min(arg1, ...)",
            "description": "Returns the minimum value from an array of integers or a comma-separated list of integers.",
            "minimumArguments": 1,
            "maximumArguments": null
        },
        {
            "name": "mod",
            "expectedUsage": "mod(operand1, operand2)",
            "description": "Returns the remainder of the integer division using the two provided integers.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "mul",
            "expectedUsage": "mul(operand1, operand2)",
            "description": "Returns the multiplication of the two provided integers.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "not",
            "expectedUsage": "not(arg1)",
            "description": "Converts boolean value to its opposite value.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "or",
            "expectedUsage": "or(arg1, arg2)",
            "description": "Checks whether either parameter value is true.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "padLeft",
            "expectedUsage": "padLeft(stringToPad, totalLength, paddingCharacter)",
            "description": "Returns a right-aligned string by adding characters to the left until reaching the total specified length.",
            "minimumArguments": 3,
            "maximumArguments": 3
        },
        {
            "name": "parameters",
            "expectedUsage": "parameters(parameterName)",
            "description": "Returns a parameter value. The specified parameter name must be defined in the parameters section of the template.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "providers",
            "expectedUsage": "providers(providerNamespace, [resourceType])",
            "description": "Return information about a resource provider and its supported resource types. If not type is provided, all of the supported types are returned.",
            "minimumArguments": 1,
            "maximumArguments": 2
        },
        {
            "name": "range",
            "expectedUsage": "range(startingInteger, numberOfElements)",
            "description": "Creates an array of integers from a starting integer and containing a number of items.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "reference",
            "expectedUsage": "reference(resourceName\/resourceIdentifier, [apiVersion], ['Full'])",
            "description": "Enables an expression to derive its value from another resource's runtime state.",
            "minimumArguments": 1,
            "maximumArguments": 3
        },
        {
            "name": "replace",
            "expectedUsage": "replace(originalString, oldCharacter, newCharacter)",
            "description": "Returns a new string with all instances of one character in the specified string replaced by another character.",
            "minimumArguments": 3,
            "maximumArguments": 3
        },
        {
            "name": "resourceGroup",
            "expectedUsage": "resourceGroup()",
            "description": "Returns a structured object that represents the current resource group.",
            "minimumArguments": 0,
            "maximumArguments": 0,
            "returnValueMembers": [
                {
                    "name": "id"
                },
                {
                    "name": "name"
                },
                {
                    "name": "location"
                },
                {
                    "name": "tags"
                },
                {
                    "name": "properties"
                }
            ]
        },
        {
            "name": "resourceId",
            "expectedUsage": "resourceId([subscriptionId], [resourceGroupName], resourceType, resourceName1, [resourceName2]...)",
            "description": "Returns the unique identifier of a resource. You use this function when the resource name is ambiguous or not provisioned within the same template.",
            "minimumArguments": 2,
            "maximumArguments": null
        },
        {
            "name": "skip",
            "expectedUsage": "skip(originalValue, numberToSkip)",
            "description": "Returns an array or string with all of the elements or characters after the specified number in the array or string.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "split",
            "expectedUsage": "split(inputString, delimiter)",
            "description": "Returns an array of strings that contains the substrings of the input string that are delimited by the sent delimiters.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "startsWith",
            "expectedUsage": "startsWith(stringToSEarch, stringToFind)",
            "description": "Determines whether a string starts with a value. The comparison is case-insensitive.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "string",
            "expectedUsage": "string(valueToConvert)",
            "description": "Converts the specified value to String.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "sub",
            "expectedUsage": "sub(operand1, operand2)",
            "description": "Returns the subtraction of the two provided integers.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "subscription",
            "expectedUsage": "subscription()",
            "description": "Returns details about the subscription.",
            "minimumArguments": 0,
            "maximumArguments": 0,
            "returnValueMembers": [
                {
                    "name": "displayName"
                },
                {
                    "name": "id"
                },
                {
                    "name": "subscriptionId"
                },
                {
                    "name": "tenantId"
                }
            ]
        },
        {
            "name": "substring",
            "expectedUsage": "substring(stringToParse, startIndex, length)",
            "description": "Returns a substring that starts at the specified character position and contains the specified number of characters.",
            "minimumArguments": 1,
            "maximumArguments": 3
        },
        {
            "name": "take",
            "expectedUsage": "take(originalValue, numberToTake)",
            "description": "Returns an array or string with the specified number of elements or characters from the start of the array or string.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "toLower",
            "expectedUsage": "toLower(string)",
            "description": "Converts the specified string to lower case.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "toUpper",
            "expectedUsage": "toUpper(string)",
            "description": "Converts the specified string to upper case.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "trim",
            "expectedUsage": "trim(stringToTrim)",
            "description": "Removes all leading and trailing white-space characters from the specified string.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "union",
            "expectedUsage": "union(arg1, arg2, arg3, ...)",
            "description": "Returns a single array or object with all elements from the parameters. Duplicate values or keys are only included once.",
            "minimumArguments": 2,
            "maximumArguments": null
        },
        {
            "name": "uniqueString",
            "expectedUsage": "uniqueString(stringForCreatingUniqueString, ...)",
            "description": "Performs a 64-bit hash of the provided strings to create a unique string. This function is helpful when you need to create a unique name for a resource. You provide parameter values that represent the level of uniqueness for the result. You can specify whether the name is unique for your subscription, resource group, or deployment.",
            "minimumArguments": 1,
            "maximumArguments": null
        },
        {
            "name": "uri",
            "expectedUsage": "uri(baseUri, relativeUri)",
            "description": "Creates an absolute URI by combining the baseUri and the relativeUri string.",
            "minimumArguments": 2,
            "maximumArguments": 2
        },
        {
            "name": "uriComponent",
            "expectedUsage": "uriComponent(stringToEncode)",
            "description": "Encodes a URI.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "uriComponentToString",
            "expectedUsage": "uriComponentToString(uriEncodedString)",
            "description": "Returns a string of a URI encoded value.",
            "minimumArguments": 1,
            "maximumArguments": 1
        },
        {
            "name": "variables",
            "expectedUsage": "variables(variableName)",
            "description": "Returns the value of variable. The specified variable name must be defined in the variables section of the template.",
            "minimumArguments": 1,
            "maximumArguments": 1
        }
    ]
}
