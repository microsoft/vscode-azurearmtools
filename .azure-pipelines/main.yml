resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

variables:
  Codeql.Enabled: true

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      sourceAnalysisPool:
        name: AzurePipelines-EO
        image: 1ESPT-Windows2022
      binskim:
        enabled: true
        scanOutputDirectoryOnly: true
      policheck:
        enabled: true
      apiScan:
        break: false
        severity: error
    pool:
      name: AzurePipelines-EO
      image: AzurePipelinesWindows2022compliantGPT
      os: windows

    stages:
    - stage: Validate
      jobs:
      - job: Windows
        pool:
          name: AzurePipelines-EO
          image: 1ESPT-Windows2022
          os: windows
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish artifacts: logs'
            condition: succeededOrFailed()
            targetPath: "$(build.artifactstagingdirectory)"
            artifactName: testlogs-$(Agent.OS)

        steps:
          - template: /.azure-pipelines/common/build.yml@self
          #- template: /.azure-pipelines/common/test-without-langserver.yml@self
          #- template: /.azure-pipelines/common/lint.yml@self
          - template: /.azure-pipelines/common/test.yml@self
          - template: /.azure-pipelines/common/prepare-logs.yml@self

      - job: Linux
        pool:
          name: AzurePipelines-EO
          image: 1ESPT-Ubuntu20.04
          os: linux
        templateContext:
          outputParentDirectory: $(build.artifactstagingdirectory)
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish artifacts: logs'
            condition: succeededOrFailed()
            targetPath: "$(build.artifactstagingdirectory)"
            artifactName: testlogs-$(Agent.OS)
            # Only publish vsix from linux build since we use this to release and want to stay consistent
          - output: pipelineArtifact
            displayName: 'Publish artifacts: vsix'
            condition: ne(variables['System.PullRequest.IsFork'], 'True')
            targetPath: "$(build.artifactstagingdirectory)/vsix"
            artifactName: vsix

        steps:
          - template: /.azure-pipelines/common/build.yml@self
          - template: /.azure-pipelines/common/prepare-vsix.yml@self
          #- template: /.azure-pipelines/common/test-without-langserver.yml@self
          - template: /.azure-pipelines/common/lint.yml@self
          - template: /.azure-pipelines/common/test.yml@self
          - template: /.azure-pipelines/common/prepare-logs.yml@self

      - job: macOS
        pool:
          name: Azure Pipelines
          image: macOS-latest
          os: macOS
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish artifacts: logs'
            condition: succeededOrFailed()
            targetPath: "$(build.artifactstagingdirectory)"
            artifactName: testlogs-$(Agent.OS)

        steps:
          - template: /.azure-pipelines/common/build.yml@self
          #- template: /.azure-pipelines/common/test-without-langserver.yml@self
          #- template: /.azure-pipelines/common/lint.yml@self
          - template: /.azure-pipelines/common/test.yml@self
          - template: /.azure-pipelines/common/prepare-logs.yml@self
