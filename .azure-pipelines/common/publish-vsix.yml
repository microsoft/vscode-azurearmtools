steps:
- task: Npm@1
  displayName: 'Package'
  inputs:
    command: custom
    customCommand: run package

- task: CopyFiles@2
  displayName: 'Copy vsix to staging directory'
  inputs:
    Contents: '**/*.vsix'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: vsix'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: vsix
  condition: ne(variables['System.PullRequest.IsFork'], 'True')

- task: CopyFiles@2
  displayName: 'Copy pre-cache to staging directory'
  inputs:
    Contents: 'pre-cache/**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: pre-cache'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: pre-cache
  condition: ne(variables['System.PullRequest.IsFork'], 'True')

- task: CopyFiles@2
  displayName: 'Copy post-cache to staging directory'
  inputs:
    Contents: 'post-cache/**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: post-cache'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: post-cache
  condition: ne(variables['System.PullRequest.IsFork'], 'True')
